from enum import Enum


class First(Enum):
    Program = ["break", "continue", "ID", "return", "global", "def", "if", "while", None],
    Statements = ["break", "continue", "ID", "return", "global", "def", "if", "while", None],
    Statement = ["break", "continue", "ID", "return", "global", "def", "if", "while"],
    Simple_stmt = ["break", "continue", "ID", "return", "global"],
    Compound_stmt = ["def", "if", "while"],
    Assignment_Call = ["ID"],
    B = ["=", "[", "("],
    C = ["ID", "[", "NUM"],
    List_Rest = [",", None],
    Return_stmt = ["return"],
    Return_Value = ["ID", "NUM", None],
    Global_stmt = ["global"],
    Function_def = ["def"],
    Params = ["ID", None],
    Params_Prime = [",", None],
    If_stmt = ["if"],
    Else_block = ["else", None],
    Iteration_stmt = ["while"],
    Relational_Expression = ["ID", "NUM"],
    Relop = ["==", "<"],
    Expression = ["ID", "NUM"],
    Expression_Prime = ["+", "-", None],
    Term = ["ID", "NUM"],
    Term_Prime = ["*", None],
    Factor = ["ID", "NUM"],
    Power = ["(", "[", "**", None],
    Primary = ["(", "[", None],
    Arguments = ["ID", "NUM", None],
    Arguments_Prime = [",", None],
    Atom = ["ID", "NUM"]


class Follow(Enum):
    Program = ["$"],
    Statements = [";", "else", "$"],
    Statement = [";"],
    Simple_stmt = [";"],
    Compound_stmt = [";"],
    Assignment_Call = [";"],
    B = [";"],
    C = [";"],
    List_Rest = ["]"],
    Return_stmt = [";"],
    Return_Value = [";"],
    Global_stmt = [";"],
    Function_def = [";"],
    Params = [")"],
    Params_Prime = [")"],
    If_stmt = [";"],
    Else_block = [";"],
    Iteration_stmt = [";"],
    Relational_Expression = [")", ":"],
    Relop = ["ID", "NUM"],
    Expression = [";", "]", ")", ",", ":", "==", "<"],
    Expression_Prime = [";", "]", ")", ",", ":", "==", "<"],
    Term = [";", "]", ")", ",", ":", "==", "<", "+", "-"],
    Term_Prime = [";", "]", ")", ",", ":", "==", "<", "+", "-"],
    Factor = [";", "]", ")", ",", ":", "==", "<", "+", "-", "*"],
    Power = [";", "]", ")", ",", ":", "==", "<", "+", "-", "*"],
    Primary = [";", "]", ")", ",", ":", "==", "<", "+", "-", "*"],
    Arguments = [")"],
    Arguments_Prime = [")"],
    Atom = [";", "[", "]", "(", ")", ",", ":", "==", "<", "+", "-", "*", "**"]
